name: CI/CD Pipeline

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Login to DockerHub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Build Docker image
      run: docker build -t ${{ secrets.DOCKER_USERNAME }}/cicd_m:latest

    - name: Push Docker image to DockerHub
      run: docker push ${{ secrets.DOCKER_USERNAME }}/cicd_m:latest

  deploy-1:
    runs-on: ubuntu-latest
    needs: build
    steps:
    - name: Deploy to EC2-1
      run: |
        mkdir -p ~/.ssh
        echo "${{ secrets.SSH_KEY }}" > ~/.ssh/keyToEC2
        chmod 600 ~/.ssh/keyToEC2
        ssh -o StrictHostKeyChecking=no -i ~/.ssh/keyToEC2 ubuntu@<EC2_1_IP> << EOF
        sudo docker stop cicd_m || true
        sudo docker rm cicd_m || true
        sudo docker pull ${{ secrets.DOCKER_USERNAME }}/cicd_m:latest
        sudo docker run -d --name cicd_m -p 5000:5000 ${{ secrets.DOCKER_USERNAME }}/cicd_m:latest
        EOF

  deploy-2:
    runs-on: ubuntu-latest
    needs: build
    steps:
    - name: Deploy to EC2-2
      run: |
        mkdir -p ~/.ssh
        echo "${{ secrets.SSH_SECOND }}" > ~/.ssh/keyToEC2
        chmod 600 ~/.ssh/keyToEC2
        ssh -o StrictHostKeyChecking=no -i ~/.ssh/keyToEC2 ubuntu@<EC2_2_IP> << EOF
        sudo docker stop midterm || true
        sudo docker rm midterm || true
        sudo docker pull ${{ secrets.DOCKER_USERNAME }}/midterm:latest
        sudo docker run -d --name midterm -p 5000:5000 ${{ secrets.DOCKER_USERNAME }}/midterm:latest
        EOF
